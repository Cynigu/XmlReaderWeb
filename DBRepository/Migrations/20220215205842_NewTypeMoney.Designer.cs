// <auto-generated />
using System;
using DBRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBRepository.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20220215205842_NewTypeMoney")]
    partial class NewTypeMoney
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Models.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountFiles")
                        .HasColumnType("int");

                    b.Property<int>("CountObject")
                        .HasColumnType("int");

                    b.Property<int>("CountXmlFiles")
                        .HasColumnType("int");

                    b.Property<string>("PathFolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkEmployeeId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("Models.WorkEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("BetForObject")
                        .HasColumnType("real");

                    b.Property<int>("CountFactFiles")
                        .HasColumnType("int");

                    b.Property<int>("CountFactObject")
                        .HasColumnType("int");

                    b.Property<int>("CountPlanFiles")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGetSalary")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkEmployees");
                });

            modelBuilder.Entity("Models.Folder", b =>
                {
                    b.HasOne("Models.WorkEmployee", null)
                        .WithMany("Folders")
                        .HasForeignKey("WorkEmployeeId");
                });

            modelBuilder.Entity("Models.WorkEmployee", b =>
                {
                    b.HasOne("Models.Employee", null)
                        .WithMany("Works")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("Models.WorkEmployee", b =>
                {
                    b.Navigation("Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
